{"version":3,"sources":["components/Footer.js","components/global/styles.js","components/global/CovidCard.js","components/global/AllCountryTable.js","components/global/CovidTracker.js","components/NavBar.js","App.js","index.js"],"names":["Footer","d","Date","style","textAlign","backgroundColor","height","lineHeight","href","getFullYear","makeStyles","theme","dividerColor1","background","marginBottom","marginLeft","marginRight","covidCardHeader","padding","CovidCard","bgColor","caseName","cases","active","country","casesPerOneMillion","deaths","critical","recovered","deathsPerOneMillion","todayCases","testsPerOneMillion","todayDeaths","classes","totalTests","useStyles","c","Paper","elevation","margin","marginTop","Typography","variant","className","Divider","toLocaleString","columns","id","align","label","minWidth","format","value","AllCountryTable","coronaData","React","useState","page","setPage","rowsPerPage","setRowsPerPage","rows","Object","values","console","log","sx","width","overflow","TableContainer","maxHeight","Table","stickyHeader","TableHead","TableRow","map","column","TableCell","TableBody","slice","row","hover","role","tabIndex","code","TablePagination","rowsPerPageOptions","component","count","length","onPageChange","event","newPage","onRowsPerPageChange","target","CovidTracker","setcoronaData","coronaBDData","setcoronaBDData","highestCaseCountry","sethighestCaseCountry","highestDeathCountry","sethighestDeathCountry","loader","setloader","getData","a","fetch","res","json","data","highestCase","highestCaseData","highestDeath","highestDeathData","i","coronaBDDatatemp","useEffect","Box","CircularProgress","paddingBottom","color","display","flexWrap","m","paddingTop","NavBar","flexGrow","AppBar","position","Tooltip","title","class","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95830bd6.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Footer = () => {\r\n    var d = new Date()\r\n    return (\r\n        <div style={{textAlign:\"center\",backgroundColor:\"lightgray\", height:\"50px\",lineHeight:\"50px\"}}>\r\n            Copyright Â© <a href=\"https://www.linkedin.com/in/nusratjahan35/\">Nusrat Jahan</a> {d.getFullYear()}.\r\n        </div>\r\n    )\r\n}\r\nexport default Footer;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n    dividerColor1: {\r\n        background: 'rgb(0,128,128)',\r\n        height:'2px',\r\n        marginBottom: \"20px\",\r\n        marginLeft:\"80px\",\r\n        marginRight:'80px'\r\n    },\r\n    covidCardHeader:{\r\n        textAlign:\"center\",padding:\"8px\",\r\n    },\r\n}));\r\n","import React from 'react';\r\nimport { Paper, Typography, Divider } from '@mui/material';\r\n\r\nimport useStyles from './styles'\r\n\r\nconst CovidCard = ({ bgColor,\r\n    caseName,\r\n    active,\r\n    cases,\r\n    casesPerOneMillion,\r\n    country,\r\n    critical,\r\n    deaths,\r\n    deathsPerOneMillion,\r\n    recovered,\r\n    testsPerOneMillion,\r\n    todayCases,\r\n    todayDeaths,\r\n    totalTests }) => {\r\n\r\n    const classes = useStyles();\r\n    const c = bgColor;\r\n\r\n    return (\r\n        <>\r\n            <Paper elevation={10} style={{ margin: \"auto\", backgroundColor: `${c}`, marginBottom: \"20px\", marginTop: \"20px\" }}>\r\n                <Typography variant=\"h6\" className={classes.covidCardHeader}> {country} ({caseName})</Typography>\r\n                <Divider />\r\n                <Divider />\r\n                <Typography style={{ padding: \"9px\" }}> \r\n                    {caseName} \r\n                    cases: {caseName === \"Total\" ? \r\n                        (cases !== 0 &&cases.toLocaleString('en-US')) : (todayCases !== 0 && todayCases.toLocaleString('en-Us'))}\r\n                </Typography>\r\n                <Divider />\r\n                <Typography style={{ padding: \"9px\" }}> \r\n                    {caseName} \r\n                    deaths: {caseName === \"Total\" ? \r\n                        (deaths!==0 && deaths.toLocaleString('en-Us')) : (todayDeaths!==0 && todayDeaths.toLocaleString('en-US'))}\r\n                </Typography>\r\n                <Divider />\r\n                {caseName === \"Total\" ? \r\n                    <Typography style={{ padding: \"9px\" }}> {caseName} recovered: {(recovered !== 0 && recovered.toLocaleString('en-US'))} </Typography> : null }\r\n            </Paper>\r\n        </>\r\n    )\r\n}\r\nexport default CovidCard;\r\n","import React from 'react';\r\nimport { Paper, \r\n    Table, \r\n    TableBody,  \r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TablePagination,\r\n    TableRow } from '@mui/material';\r\n\r\nconst columns = [\r\n    // { id: , label: '#', minWidth: 10 },\r\n    { id: 'country', align: 'center', label: 'Country', minWidth: 100 },\r\n    {\r\n        id: 'cases',\r\n        label: 'Total Cases',\r\n        minWidth: 150,\r\n        align: 'right',\r\n        format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n    {\r\n        id: 'todayCases',\r\n        label: 'New Cases',\r\n        minWidth: 150,\r\n        align: 'right',\r\n        format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n    {\r\n        id: 'deaths',\r\n        label: 'Today Deaths',\r\n        minWidth: 150,\r\n        align: 'right',\r\n        format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n    {\r\n        id: 'todayDeaths',\r\n        label: 'New Deaths',\r\n        minWidth: 150,\r\n        align: 'right',\r\n        format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n    {\r\n        id: 'recovered',\r\n        label: 'Total Recovered',\r\n        minWidth: 150,\r\n        align: 'right',\r\n        format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n    // {\r\n    //     id: 'todayRecovered',\r\n    //     label: 'New Recovered',\r\n    //     minWidth: 150,\r\n    //     align: 'right',\r\n    //     format: (value) => value.toLocaleString('en-US'),\r\n    // },\r\n    {\r\n        id: 'active',\r\n        label: 'Active Cases',\r\n        minWidth: 150,\r\n        align: 'right',\r\n        format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n    {\r\n        id: 'critical',\r\n        label: 'Critical Cases',\r\n        minWidth: 150,\r\n        align: 'right',\r\n        format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n    {\r\n        id: 'casesPerOneMillion',\r\n        label: 'Total Cases/1M',\r\n        minWidth: 150,\r\n        align: 'right',\r\n        format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n    {\r\n        id: 'deathsPerOneMillion',\r\n        label: 'Deaths/1M',\r\n        minWidth: 150,\r\n        align: 'right',\r\n        format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n    {\r\n        id: 'totalTests',\r\n        label: 'Total Tests',\r\n        minWidth: 150,\r\n        align: 'right',\r\n        format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n    {\r\n        id: 'testsPerOneMillion',\r\n        label: 'Tests/1M',\r\n        minWidth: 150,\r\n        align: 'right',\r\n        format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n\r\n];\r\n\r\nconst AllCountryTable = (coronaData) => {\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n    // const [rowsSearch, setrowsSearch] = React.useState([]);\r\n    // const {country,cases,todayCases,deaths,todayDeaths,recovered,active,critical,casesPerOneMillion,deathsPerOneMillion,totalTests,testsPerOneMillion,} = coronaData;\r\n    var rows = Object.values(coronaData);\r\n    console.log(rows);\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    // const filterByCountry = (e) => {        \r\n    //     if (searchCountry !== null) {\r\n    //         console.log(rows[10].country )\r\n    //         console.log(searchCountry)\r\n    //         for (var i = 1; i < rows.length; i++) {\r\n    //             if (rows[i].country === searchCountry) {\r\n    //                 console.log(rows[i])\r\n    //                 // rows = [rows[i]];\r\n    //                 var arr =[];\r\n    //                 arr.push(rows[i]);\r\n    //                 setrowsSearch(arr);\r\n    //                 break;\r\n    //             }\r\n    //         }\r\n    //     }\r\n       \r\n    //     console.log(rowsSearch)\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            {/* <div style={{ display: 'flex', marginLeft: \"5%\" }}>\r\n                <TextField id=\"outlined-basic\" placeholder=\"Searchâ¦\" variant=\"outlined\" value={searchCountry} onChange={(e) => setsearchCountry(e.target.value)} />\r\n                <Button className={classes.buttonSubmit}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    style={{ width: \"100px\" }}\r\n                    onClick={filterByCountry}\r\n                >\r\n                    Submit\r\n                </Button>\r\n            </div> */}\r\n            <Paper sx={{ width: '90%', overflow: 'hidden', margin: 'auto' }}>\r\n                <TableContainer sx={{ maxHeight: 440 }}>\r\n                    <Table stickyHeader aria-label=\"sticky table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                {columns.map((column) => (\r\n                                    <TableCell\r\n                                        key={column.id}\r\n                                        align={column.align}\r\n                                        style={{ minWidth: column.minWidth }}\r\n                                    >\r\n                                        {column.label}\r\n                                    </TableCell>\r\n                                ))}\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {rows\r\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                .map((row) => {\r\n                                    return (\r\n                                        <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                                            {columns.map((column) => {\r\n                                                const value = row[column.id];\r\n                                                return (\r\n                                                    <TableCell key={column.id} align={column.align}>\r\n                                                        {value !== 0 ?\r\n                                                            (column.format && typeof value === 'number' && value !== 0\r\n                                                            ? column.format(value)\r\n                                                            : value) : \"\"\r\n                                                        }\r\n                                                        {/* {column.format && typeof value === 'number'\r\n                                                            ? column.format(value)\r\n                                                            : value} */}\r\n                                                    </TableCell>\r\n                                                );\r\n                                            })}\r\n                                        </TableRow>\r\n                                    );\r\n                                })}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 100]}\r\n                    component=\"div\"\r\n                    count={rows.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onPageChange={handleChangePage}\r\n                    onRowsPerPageChange={handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n        </>\r\n    );\r\n}\r\nexport default AllCountryTable;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Box, Typography, CircularProgress } from '@mui/material';\r\nimport CovidCard from './CovidCard';\r\nimport AllCountryTable from './AllCountryTable';\r\n\r\nconst CovidTracker = () => {\r\n    const [coronaData, setcoronaData] = useState({});\r\n    const [coronaBDData, setcoronaBDData] = useState({});\r\n    const [highestCaseCountry, sethighestCaseCountry] = useState({});\r\n    const [highestDeathCountry, sethighestDeathCountry] = useState({});\r\n    const [loader, setloader] = useState(true)\r\n\r\n    const getData = async () => {\r\n        try {\r\n            const apiUrl = 'https://coronavirus-19-api.herokuapp.com/countries';\r\n            const res = await fetch(apiUrl);\r\n            const data = await res.json();\r\n            console.log(data[0]);\r\n            let highestCase = 0;\r\n            var highestCaseData = {};\r\n            let highestDeath = 0;\r\n            var highestDeathData = {};\r\n            for (var i = 1; i < data.length; i++) {\r\n                if (data[i].todayCases > highestCase) {\r\n                    highestCase = data[i].todayCases;\r\n                    highestCaseData = data[i];\r\n                }\r\n                if (data[i].todayDeaths > highestDeath) {\r\n                    highestDeath = data[i].todayDeaths;\r\n                    highestDeathData = data[i];\r\n                }\r\n                if (data[i].country === \"Bangladesh\") {\r\n                    var coronaBDDatatemp = data[i];\r\n                    // break;\r\n                }\r\n            }\r\n            setcoronaData(data);\r\n            setcoronaBDData(coronaBDDatatemp);\r\n            sethighestCaseCountry(highestCaseData);\r\n            sethighestDeathCountry(highestDeathData);\r\n            setloader(false);\r\n\r\n            console.log(coronaBDData);\r\n            console.log(coronaData)\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n    useEffect(() => {\r\n        getData();\r\n    }, [])\r\n    if (loader === true) {\r\n        return (\r\n        <Box >\r\n            <CircularProgress />\r\n        </Box>)\r\n    } else {\r\n        return (\r\n            <>\r\n                <div style={{ background: 'rgba(0,128,128, 0.2)', paddingBottom: \"30px\" }}>\r\n                    <Typography variant=\"h6\" style={{ textAlign: \"center\", padding: \"10px\", color: \"red\" }}>Covid19  Updates</Typography>\r\n                    {/* <Divider className={classes.dividerColor1} /> */}\r\n                    <Box\r\n                        sx={{\r\n                            display: 'flex',\r\n                            flexWrap: 'wrap',\r\n                            '& > :not(style)': {\r\n                                m: 1,\r\n                                width: 300,\r\n                                height: 200,\r\n                            },\r\n                            // background: 'rgba(0,128,128, 0.9)'\r\n                        }}\r\n                    >\r\n\r\n                        <CovidCard bgColor={\"#D8BFD8\"} caseName={\"Total\"} {...coronaData[0]} />\r\n                        <CovidCard bgColor={\"#DDA0DD\"} caseName={\"Today\"} {...coronaData[0]} />\r\n                        <CovidCard bgColor={\"#ADD8E6\"} caseName={\"Total\"} {...coronaBDData} />\r\n                        <CovidCard bgColor={\"#87CEFA\"} caseName={\"Today\"} {...coronaBDData} />\r\n\r\n\r\n                    </Box>\r\n                    <Typography variant=\"h6\" style={{ textAlign: \"center\", paddingTop: \"12px\" }}>Reported Cases and Deaths by Country</Typography>\r\n                    <Typography style={{ textAlign: \"center\", padding: \"8px\" }}>\r\n                        The coronavirus <b>COVID-19</b> is affecting\r\n                        <b style={{ color: 'red' }}> {coronaData.length} </b>\r\n                        countries and territories. The day is reset after midnight GMT+0.\r\n                    </Typography>\r\n                    <Typography style={{ textAlign: \"center\", padding: \"8px\" }}>\r\n                        Today Highest Covid-19 affected in\r\n                        <b style={{ color: 'red' }}> {highestCaseCountry.country} ({highestCaseCountry.todayCases.toLocaleString('en-US')})</b>\r\n                    </Typography>\r\n                    <Typography style={{ textAlign: \"center\", padding: \"8px\" }}>\r\n                        Today Highest Covid-19 deaths in\r\n                        <b style={{ color: 'red' }}> {highestDeathCountry.country} ({highestDeathCountry.todayDeaths.toLocaleString('en-US')})</b>\r\n                    </Typography>\r\n\r\n                    <AllCountryTable {...coronaData} />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default CovidTracker;\r\n","import React from 'react';\r\nimport { AppBar, Box, Typography,Tooltip  } from '@mui/material';\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <>\r\n            <Box sx={{ flexGrow: 1 }}>\r\n                <AppBar position=\"static\" style={{ backgroundColor: 'RGB(0,128,128)' }}>\r\n                    <Box style={{ display: 'flex' }}>\r\n                        <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }} style={{ padding: \"15px\" }}>\r\n                            Corona Tracker\r\n                        </Typography>\r\n                        <Typography variant=\"h6\" component=\"div\" style={{ padding: \"15px\" }}>\r\n                        <Tooltip title=\"Developer Linkedin Profile\">\r\n                            <a href='https://www.linkedin.com/in/nusratjahan35/'>\r\n                                <i class=\"fab fa-linkedin\" style={{ marginRight: \"8px\",color:'white' }}></i>\r\n                            </a>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Developer Github Profile\">\r\n                            {/* <i class=\"fab fa-facebook-square\" style={{ marginRight: \"8px\" }}></i> */}\r\n                            <a href='https://github.com/nusrat35' style={{color:'white'}}><i class=\"fab fa-github-square\"></i></a>\r\n                        </Tooltip>\r\n                        </Typography>\r\n                    </Box>\r\n                </AppBar>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\nexport default NavBar;\r\n","import React from 'react';\nimport Footer from './components/Footer';\nimport CovidTracker from './components/global/CovidTracker';\nimport NavBar from \"./components/NavBar\";\n\nfunction App() {\n  return (\n    <>\n        <NavBar />\n        <CovidTracker/>\n        <Footer />\n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}